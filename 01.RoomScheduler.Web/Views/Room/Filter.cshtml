@model RoomScheduler.Web.ViewModels.FilterViewModel

<!DOCTYPE html>
<html>
<head>
    <meta name="viewport" content="width=device-width, initial-scale=1.0">

    <style>
        .wrapper {
            display: grid;
            grid-template-columns: repeat(6, 1fr);
            gap: 10px;
        }

        [name="container"] {
            border: 2px solid;
            border-color: grey;
            border-radius: 20px;
        }
    </style>
</head>
<body>

    @if (Model.Rooms.Count == 0)
    {
        <div name="container" class="list-group-item" style="margin-bottom: 10px;">
            <div style="padding: 10px;">
                <h5>No available rooms!</h5>
            </div>
        </div>
    }
    else
    {
        <div name="container" class="list-group-item" style="margin-bottom: 50px;">
            <div style="padding: 10px;">
                <h5>All available rooms on @Model.Date.ToShortDateString() for @Model.Duration.ToString(@"hh\:mm") hours and @Model.Participants participants</h5>
            </div>

            <ul class="list-group">
                <li class="list-group-item" style="border-color: grey; margin-top: 10px;">
                    <div>Displaying optional time slots. Click room for more specific results.</div>
                </li>
            </ul>
        </div>

        @foreach (var room in Model.Rooms.OrderBy(x => x.Capacity))
        {
            <div name="container" onclick="location.href='@Url.Action("Available", "Room", new { roomGuid = room.Guid, duration = Model.Duration, date = Model.Date } )'" class="list-group-item grow" style="margin-bottom: 20px; margin-top: 50px;">
                <div>
                    Name: @room.Name
                    <br />
                    Capacity: @room.Capacity
                </div>
            </div>

            <div class="wrapper">
                @{ int index = 0; }
                @foreach (var time in room.AvailableSchedule)
                {
                    <a name="container" class="list-group-item-action grow" onclick="loadReserveTimeSlotModal(this, @index)"
                       data-room="@room.Name" data-date="@Model.Date.ToShortDateString()"
                       data-from="@time.From.ToString(@"hh\:mm")" data-to="@time.To.ToString(@"hh\:mm")">

                        <div style="padding: 10px;">
                            From: @time.From.ToString(@"hh\:mm")
                            <br />
                            To: @time.To.ToString(@"hh\:mm")
                        </div>
                    </a>

                    <form id="reserveTimeSlotForm[@index]" method="post" asp-controller="TimeSlot" asp-action="Reserve" style="display: none;">
                        <input type="hidden" name="date" value="@Model.Date" />
                        <input type="hidden" name="from" value="@time.From" />
                        <input type="hidden" name="to" value="@time.To" />
                        <input type="hidden" name="roomId" value="@room.Id" />
                    </form>
                    index++;
                }
            </div>
        }
    }

    <partial name="~/Views/TimeSlot/_ReserveTimeSlotModalPartial.cshtml" />

    <script>
        function loadReserveTimeSlotModal() {
            let container = arguments[0];
            $('#room').text(container.getAttribute('data-room'));
            $('#date').text(container.getAttribute('data-date'));
            $('#from').text(container.getAttribute('data-from'));
            $('#to').text(container.getAttribute('data-to'));

            let formIndex = arguments[1];
            let formId = `reserveTimeSlotForm[${formIndex}]`;
            $('#reserveButton').attr("form", formId);

            $('#currentAvailableTimeModal').modal('show');
        }
    </script>

</body>
</html>